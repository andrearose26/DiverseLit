{"version":3,"sources":["assets/blog/thumbnails/blogThumbnail1.jpg","assets/blog/thumbnails/blogThumbnail2.jpg","assets/blog/thumbnails/blogThumbnail3.jpg","bookInfo.js","components/Nav.js","components/Hero.js","categories.js","components/Filter.js","components/Header.js","components/AllBooks.js","components/Footer.js","components/LoadingScreen.js","components/NoBook.js","components/MainPage.js","components/About.js","components/Blog.js","components/BookPage.js","components/NotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","bookInfo","race","noSelect","black","isbn","title","author","otherCategories","indigenous","asian","latinx","gender","female","nonBinary","trans","Nav","className","id","to","Hero","categories","optionName","value","Filter","HandleFilterSelectionRace","e","setState","select1","target","name","category1","HandleFilterSelectionGender","select2","category2","filterReset","raceValues","document","getElementById","options","genderValues","selectedIndex","state","onChange","this","map","raceOfAuthor","i","key","genderOfAuthor","onClick","props","getFilteredBooksProps","type","Component","Header","AllBooks","bookImg","image","bookTitles","bookAuthors","bookISBNs","pathname","bookISBN","bookAuthor","bookTitle","src","alt","Footer","href","icon","LoadingScreen","NoBook","MainPage","showLoadingScreenProps","showNoBookScreenProps","About","Blog","blogThumbnail1","blogThumbnail2","blogThumbnail3","BookPage","getBookCoverAPI","axios","method","url","imageAPI","responseType","params","Token","EAN","SAN","thumbnail","then","coverInfo","cover","request","responseURL","getBookDetailsAPI","showBookLoadingScreen","jsonAPI","Get","currentTitle","currentContributor","currentPublisher","currentCover","currentDescription","currentPages","bookData","response","Product","undefined","Title","TitleText","Contributor","PersonName","Publisher","PublisherName","MediaFile","MediaFileLink","OtherText","Text","NumberOfPages","cleanTitle","replace","cleanDescription","cleanPublisher","parser","DOMParser","parseDescription","parseFromString","parsePublisher","parseTitle","newDescription","documentElement","innerHTML","newPublisher","innerText","newTitle","contributor","publisher","description","pages","showBookInfo","authorBio","price","currentIsbn","data","match","setTimeout","Fragment","dangerouslySetInnerHTML","__html","NotFound","library","add","fab","faArrowUp","App","getBookAPI","showLoadingScreen","showNoBookScreen","getAllBooks","newISBNs","newTitles","newAuthors","noDupISBNs","noDupTitles","noDupAuthors","raceCategories","Object","keys","genderCategories","length","info","push","Set","allIsbns","allTitles","allAuthors","showAllBooks","apiPromises","newImageURLs","all","apiCovers","returnedCovers","apiObject","imageURLs","getFilteredBooks","categoryChoice1","categoryChoice2","selectChoice1","selectChoice2","selectedISBNs","newPromises","selectedImageURLs","selectedTitles","selectedAuthors","otherCategory","j","console","log","sortedCovers","allBooks","basename","path","exact","render","component","showAllBooksProps","Boolean","window","location","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.298a736e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blogThumbnail1.4556ab06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blogThumbnail2.fa065ac0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blogThumbnail3.95b74f36.jpg\";","//Object that contains all book titles and ISBNs\nconst bookInfo = {\n  race: {\n    noSelect: [],\n    black: [\n      {\n        isbn: 9780385686150,\n        title: \"Homegoing\",\n        author: \"Yaa Gyasi\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780399587689,\n        title: \"The Proposal\",\n        author: \"Jasmine Guillory\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780385690324,\n        title: \"Black Leopard Red Wolf\",\n        author: \"Marlon James\"\n      },\n      {\n        isbn: 9781501168000,\n        title: \"Heads of The Colored People\",\n        author: \"Nafissa Thompson-Spires\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9781443459587,\n        title: \"Washington Black\",\n        author: \"Esi Edugyan\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780802128997,\n        title: \"Freshwater\",\n        author: \"Akwaeke Emezi\",\n        otherCategories: [\"female\", \"trans\"]\n      },\n      {\n        isbn: 9781555977856,\n        title: \"Don't Call Us Dead: Poems\",\n        author: \"Danez Smith\",\n        otherCategories: [\"nonBinary\", \"queer\"]\n      },\n      {\n        isbn: 9781617755880,\n        title: \"An Unkindness of Ghosts\",\n        author: \"Rivers Solomon\",\n        otherCategories: [\"nonBinary\", \"lesbian\", \"queer\"]\n      },\n      {\n        isbn: 9780062662835,\n        title: \"With the Fire On High\",\n        author: \"Elizabeth Acevedo\",\n        otherCategories: [\"Latinx\", \"Black\"]\n      },\n    ],\n    indigenous: [\n      {\n        isbn: 9780771073038,\n        title: \"There There\",\n        author: \"Tommy Orange\"\n      },\n      {\n        isbn: 9780385691147,\n        title: \"Heart Berries\",\n        author: \"Terese Marie Mailhot\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9781443451352,\n        title: \"Birdie\",\n        author: \"Tracey Lindberg\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780385692380,\n        title: \"A Mind Spread Out On The Ground\",\n        author: \"Alicia Elliott\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9781770414006,\n        title: \"Moon of the Crusted Snow\",\n        author: \"Waubgeshig Rice\"\n      }\n    ],\n    asian: [\n      {\n        isbn: 9780804172707,\n        title: \"A Little Life\",\n        author: \"Hanya Yanagihara\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780525432753,\n        title: \"The Clothing Of Books\",\n        author: \"Jhumpa Lahiri\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780062428738,\n        title: \"Sick\",\n        author: \"Porochista Khakpour\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780385693219,\n        title: \"The Farm\",\n        author: \"Joanne Ramos\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780735223707,\n        title: \"Know My Name: A Memoir\",\n        author: \"Chanel Miller\",\n        otherCategories: [\"female\"]\n      }\n    ],\n    latinx: [\n      {\n        isbn: 9780525434313,\n        title: \"Fruit of the Drunken Tree\",\n        author: \"Ingrid Rojas Contreras\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780735217737,\n        title: \"The Line Becomes a River\",\n        author: \"Francisco Cantú\"\n      },\n      {\n        isbn: 9780525511298,\n        title: \"Sabrina & Corina\",\n        author: \"Kali Fajardo-Anstine\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780062662835,\n        title: \"With the Fire On High\",\n        author: \"Elizabeth Acevedo\",\n        otherCategories: [\"female\", \"black\"]\n      },\n      {\n        isbn: 9780771094507,\n        title: \"In The Dream House: A Memoir\",\n        author: \"Carmen Maria Machado\",\n        otherCategories: [\"female\"]\n      }\n    ]\n  },\n  gender: {\n    noSelect: [],\n    female: [\n      {\n        isbn: 9780385686150,\n        title: \"Homegoing\",\n        author: \"Yaa Gyasi\",\n        otherCategories: [\"black\"]\n      },\n      {\n        isbn: 9780399587689,\n        title: \"The Proposal\",\n        author: \"Jasmine Guillory\",\n        otherCategories: [\"black\"]\n      },\n      {\n        isbn: 9781501168000,\n        title: \"Heads of The Colored People\",\n        author: \"Nafissa Thompson-Spires\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9781443459587,\n        title: \"Washington Black\",\n        author: \"Esi Edugyan\",\n        otherCategories: [\"black\"]\n      },\n      {\n        isbn: 9780385691147,\n        title: \"Heart Berries\",\n        author: \"Terese Marie Mailhot\",\n        otherCategories: [\"indigenous\"]\n      },\n      {\n        isbn: 9781443451352,\n        title: \"Birdie\",\n        author: \"Tracey Lindberg\",\n        otherCategories: [\"indigenous\"]\n      },\n      {\n        isbn: 9780525434313,\n        title: \"Fruit of the Drunken Tree\",\n        author: \"Ingrid Rojas Contreras\",\n        otherCategories: [\"Latinx\"]\n      },\n      {\n        isbn: 9780525511298,\n        title: \"Sabrina & Corina\",\n        author: \"Kali Fajardo-Anstine\",\n        otherCategories: [\"Latinx\"]\n      },\n      {\n        isbn: 9780062662835,\n        title: \"With the Fire On High\",\n        author: \"Elizabeth Acevedo\",\n        otherCategories: [\"Latinx\", \"Black\"]\n      },\n      {\n        isbn: 9780771094507,\n        title: \"In The Dream House: A Memoir\",\n        author: \"Carmen Maria Machado\",\n        otherCategories: [\"Latinx\"]\n      },\n      {\n        isbn: 9780385692380,\n        title: \"A Mind Spread Out On The Ground\",\n        author: \"Alicia Elliott\"\n      },\n      {\n        isbn: 9780804172707,\n        title: \"A Little Life\",\n        author: \"Hanya Yanagihara\"\n      },\n      {\n        isbn: 9780525432753,\n        title: \"The Clothing Of Books\",\n        author: \"Jhumpa Lahiri\"\n      },\n      {\n        isbn: 9780062428738,\n        title: \"Sick\",\n        author: \"Porochista Khakpour\"\n      },\n      {\n        isbn: 9780385693219,\n        title: \"The Farm\",\n        author: \"Joanne Ramos\"\n      },\n      {\n        isbn: 9780735223707,\n        title: \"Know My Name: A Memoir\",\n        author: \"Chanel Miller\"\n      }\n    ],\n    nonBinary: [\n      {\n        isbn: 9781555977856,\n        title: \"Don't Call Us Dead: Poems\",\n        author: \"Danez Smith\",\n        otherCategories: [\"black\"]\n      },\n      {\n        isbn: 9781617755880,\n        title: \"An Unkindness of Ghosts\",\n        author: \"Rivers Solomon\",\n        otherCategories: [\"lesbian\", \"black\"]\n      }\n    ],\n    trans: [\n      //in the future add to female as well\n      {\n        isbn: 9780802128997,\n        title: \"Freshwater\",\n        author: \"Akwaeke Emezi\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9781551527208,\n        title: \"Little Fish\",\n        author: \"Casey Plett\",\n        otherCategories: [\"female\"]\n      },\n      {\n        isbn: 9780735235939,\n        title: \"I'm Afraid of Men\",\n        author: \"Vivek Shraya\",\n        otherCategories: [\"female\"]\n      }\n    ]\n  }\n};\n\nexport default bookInfo;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => (\n  <nav className=\"fixedHeader\" id=\"nav\">\n    <div className=\"wrapper\">\n      <h1 className=\"title\">\n\n        <Link to=\"/\">\n          Diverse Lit<span>.</span>\n        </Link>\n      </h1>\n      <ul>\n        <Link to=\"/about\">\n          <li>\n            <span className=\"hover\"> About</span>\n          </li>\n        </Link>\n        <Link to=\"/blog\">\n          <li>\n            <span className=\"hover\">Blog</span>\n          </li>\n        </Link>\n\n        <Link to=\"/\">\n          <li>\n            <span className=\"hover\">Browse</span>\n          </li>\n        </Link>\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default Nav;","import React from 'react';\n\nconst Hero = () => (\n\n    <div className='hero'>\n        <div className=\"text\">\n\n        </div>\n\n    </div>\n);\n\nexport default Hero;","\nconst categories = {\n  race: [\n    {\n      optionName: \"Ethnicity\",\n      value: \"noSelect\"\n    },\n    {\n      optionName: \"Asian authors\",\n      value: \"asian\"\n    },\n    {\n      optionName: \"Black authors\",\n      value: \"black\"\n    },\n    {\n      optionName: \"Indigenous authors\",\n      value: \"indigenous\"\n    },\n    {\n      optionName: \"Latinx authors\",\n      value: \"latinx\"\n    }\n  ],\n  gender: [\n    {\n      optionName: \"Gender\",\n      value: \"noSelect\"\n    },\n    {\n      optionName: \"Female authors\",\n      value: \"female\"\n    },\n    {\n      optionName: \"Non-binary authors\",\n      value: \"nonBinary\"\n    },\n    {\n      optionName: \"Trans authors\",\n      value: \"trans\"\n    },\n  ],\n};\n\nexport default categories;","import React,  { Component } from 'react';\nimport categories from '../categories';\n\nclass Filter extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            select1: \"\",\n            select2: \"\",\n            category1: \"\", \n            category2: \"\",\n        }\n    }\n\n    //This function grabs the user's input when they select a option before submit. \n    HandleFilterSelectionRace = (e) =>{\n        \n        this.setState({\n            select1: e.target.name,\n            category1: e.target.value,\n        })\n        \n    }\n    \n    //This function grabs the user's input when they select a option before submit. \n    HandleFilterSelectionGender = (e) =>{\n\n        this.setState({\n            select2: e.target.name,\n            category2: e.target.value,\n        })\n\n    }\n\n    filterReset = () => {\n        //This selects each select for each category, where the options are nested in an array\n        const raceValues = document.getElementById(\"race\").options;\n        const genderValues = document.getElementById(\"gender\").options;\n\n        //This sets the select to the first option in the select\n        raceValues.selectedIndex = 0;\n        genderValues.selectedIndex = 0;\n\n        this.setState({\n            select1: \"\",\n            select2: \"\",\n            category1: \"\",\n            category2: \"\",\n        })\n\n    }\n\n    render(){\n        \n        return(\n            <div className=\"filter\">\n                \n                <select onChange = {this.HandleFilterSelectionRace} name=\"race\" id=\"race\">\n                \n                    {categories.race.map((raceOfAuthor, i) => {\n                        return(\n                                <option className = {raceOfAuthor.value} key = {i} value={raceOfAuthor.value}>{raceOfAuthor.optionName}</option>\n                            )\n                        })}\n\n                </select>\n\n\n                <select onChange = {this.HandleFilterSelectionGender}  name=\"gender\" id=\"gender\">\n                \n                    {categories.gender.map((genderOfAuthor, i) => {\n                        \n                        return(\n                            <option className = {genderOfAuthor.value} key = {i} value={genderOfAuthor.value}>{genderOfAuthor.optionName}</option>\n                            )\n                        })}\n\n                </select>\n\n                <button onClick={(e) => {\n                    this.props.getFilteredBooksProps(e, this.state.category1, this.state.category2, this.state.select1, this.state.select2);\n                    this.filterReset();\n                }\n                }type =\"submit\">Filter</button>\n\n            </div>\n        )\n    }\n\n}\n\nexport default Filter;","import React, { Component } from 'react';\n\nimport Nav from './Nav'\nimport Hero from './Hero';\nimport Filter from './Filter';\n\nclass Header extends Component {\n\n    render(){\n        return (\n          <header >\n            <Nav />\n            <Hero />\n            <div className=\"categories\" id=\"categories\">\n              <h2>Select a category</h2>\n              <Filter\n                getFilteredBooksProps={this.props.getFilteredBooksProps}\n              />\n            </div>\n          </header>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LazyLoad from 'react-lazyload';\n\nconst AllBooks =  props  => (\n    <div className='books'>\n        <ul>\n            {props.bookImg.map((image, i) => {\n                const title = props.bookTitles[i];\n                const author = props.bookAuthors[i]\n                const isbn = props.bookISBNs[i]\n                return (\n                  <LazyLoad key={i}>\n                    <li id={isbn} key={i}>\n                      <Link\n                        to={{\n                          pathname: `book/${isbn}`,\n                          state: {\n                            bookISBN: isbn,\n                            bookAuthor: author,\n                            bookTitle: title\n                          }\n                        }}\n                      >\n                        <div className=\"hover-button\">\n                          <img\n                            src={image}\n                            alt={title + \" by \" + author}\n                            className=\"bookCover\"\n                          />\n                          <div className=\"hoverInfo\">\n                            <p className=\"moreDetails\">Book Details →</p>\n                          </div>\n                        </div>\n                        <div className=\"bookText\">\n                          <p className=\"title\">{title}</p>\n                          <p className=\"author\">{author}</p>\n                        </div>\n                      </Link>\n                    </li>\n                  </LazyLoad>\n                );\n            })}\n        </ul>\n    </div>\n);\n\nexport default AllBooks;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <div className=\"wrapper\">\n      <div className=\"attribution\">\n        <p>\n          Created by <a className=\"attributionLink\" href=\"http://www.andrealacson.com\"> {\" \"}Andrea Lacson</a>\n        </p>\n\n        <p>\n          Data provided by\n          <a className=\"attributionLink\" href=\"https://www.booknetcanada.ca/biblioshare\"> {\" \"} BNC Biblioshare</a>\n        </p>\n      </div>\n      <a className=\"backToTop\" href=\"#nav\">\n        <FontAwesomeIcon icon=\"arrow-up\" />\n      </a>\n    </div>\n  </div>\n);\n\nexport default Footer;","import React from \"react\";\n\nconst LoadingScreen = () => {\n    return (\n        <div className=\"loadingScreen\">\n            <h1>Grabbing book information ...</h1>\n        </div>\n    );\n};\n\nexport default LoadingScreen;","import React from \"react\";\n\nconst NoBook = () => {\n  return (\n    <div className=\"noBook loadingScreen\">\n      <h1>No books were found.</h1>\n    </div>\n  );\n};\n\nexport default NoBook;\n","import React, { Component } from 'react';\nimport Header from \"./Header\";\nimport AllBooks from \"./AllBooks\";\nimport Footer from \"./Footer\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport NoBook from \"./NoBook\";\n\nclass MainPage extends Component {\n    render(){\n\n        return (\n          <div className =\"mainPage\">\n            <Header \n              getFilteredBooksProps={this.props.getFilteredBooksProps} \n            />\n\n            <main className=\"books\" id=\"books\">\n              <div className=\"wrapper\">\n\n                {this.props.showLoadingScreenProps ? <LoadingScreen/> : null}\n                {this.props.showNoBookScreenProps ? <NoBook/> : null}\n\n                <AllBooks\n                    bookISBNs={this.props.bookISBNs}\n                    bookImg={this.props.bookImg}\n                    bookTitles={this.props.bookTitles}\n                    bookAuthors={this.props.bookAuthors}\n                />\n              </div>\n\n              <Footer />\n            </main>\n          </div>\n        );\n    }\n}\n\nexport default MainPage;","import React from \"react\";\n\nimport Nav from './Nav';\nimport Hero from './Hero';\nimport Footer from './Footer';\n\nconst About = () => (\n\n    <div className = \"aboutPage\">\n        <header>\n            <Nav />\n            <Hero />\n        </header>\n\n        <main className='aboutSection'>\n            <h2 className=\"sectionTitle\">What is Diverse Lit?</h2>\n\n            <p>Diverse Lit is a pilot project created by <a href=\"http://www.andrealacson.com/\">Andrea Lacson</a> during the Web Development Bootcamp at Juno College of Technology.</p>\n            <p>By default, Diverse Lit is a tool that makes books by diverse authors easy to find. It is a hope that one day, most underrepresented readers will be able to find a story like theirs through this website.</p>\n\n        </main>\n\n        <Footer />\n    </div>\n);\n\nexport default About;","import React from \"react\";\nimport Nav from './Nav';\nimport Hero from './Hero';\nimport Footer from './Footer';\n\nimport blogThumbnail1 from '../assets/blog/thumbnails/blogThumbnail1.jpg';\nimport blogThumbnail2 from '../assets/blog/thumbnails/blogThumbnail2.jpg';\nimport blogThumbnail3 from '../assets/blog/thumbnails/blogThumbnail3.jpg';\n\nconst Blog = () => (\n  <div className=\"blogPage\">\n    <header>\n      <Nav />\n      <Hero />\n    </header>\n\n    <main className=\"wrapper\">\n      <h1 className=\"blogTitle\">Blog</h1>\n\n      <div className=\"blogThumbnails\">\n\n        <div className=\"blogThumbnail\">\n          <div className=\"hover-button\">\n            <img src={blogThumbnail1} alt=\"alt text\"/>\n          </div>\n          <div className=\"hoverInfo\">\n            <p className=\"moreDetails\">Book Details →</p>\n          </div>\n          <h3>Blog Post Title</h3>\n          <div className=\"blogThumbnailStats\">\n            <p>By: Andrea Lacson</p>\n            <p>September 26, 2019</p>\n\n          </div>\n        </div>\n        <div className=\"blogThumbnail\">\n          <img src={blogThumbnail2} alt=\"alt text\"/>\n          <h3>Blog Post Title</h3>\n          <div className=\"blogThumbnailStats\">\n            <p>By: Andrea Lacson</p>\n            <p>September 26, 2019</p>\n\n          </div>\n        </div>\n        <div className=\"blogThumbnail\">\n          <img src={blogThumbnail3} alt=\"alt text\"/>\n          <h3>Blog Post Title</h3>\n          <div className=\"blogThumbnailStats\">\n            <p>By: Andrea Lacson</p>\n            <p>September 26, 2019</p>\n\n          </div>\n        </div>\n\n        <div className=\"blogThumbnail\">\n          <img src={blogThumbnail1} alt=\"alt text\"/>\n          <h3>Blog Post Title</h3>\n          <div className=\"blogThumbnailStats\">\n            <p>By: Andrea Lacson</p>\n            <p>September 26, 2019</p>\n\n          </div>\n        </div>\n        <div className=\"blogThumbnail\">\n          <img src={blogThumbnail2} alt=\"alt text\"/>\n          <h3>Blog Post Title</h3>\n          <div className=\"blogThumbnailStats\">\n            <p>By: Andrea Lacson</p>\n            <p>September 26, 2019</p>\n\n          </div>\n        </div>\n        <div className=\"blogThumbnail\">\n          <img src={blogThumbnail3} alt=\"alt text\"/>\n          <h3>Blog Post Title</h3>\n          <div className=\"blogThumbnailStats\">\n            <p>By: Andrea Lacson</p>\n            <p>September 26, 2019</p>\n\n          </div>\n        </div>\n      </div>\n\n    </main>\n\n    <Footer />\n  </div>\n);\n\nexport default Blog;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport Nav from './Nav';\nimport Footer from './Footer';\nimport LoadingScreen from './LoadingScreen';\n\nclass BookPage extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n          isbn: \"\",\n          jsonAPI: \"https://biblioshare.ca/bncservices/JSON.ashx?\",\n          imageAPI:\n            \"https://www.biblioshare.org/BNCServices/BNCServices.asmx/Images?\",\n          title: '',\n          contributor: '',\n          publisher: '',\n          cover: '',\n          authorBio: '',\n          description: '',\n          price: '',\n          pages:'',\n          showBookLoadingScreen: false,\n          showBookInfo: false,\n        };\n    }\n\n    getBookCoverAPI = (isbn) => {\n      return axios({\n        method: \"GET\",\n        url: this.state.imageAPI,\n        responseType: \"json\",\n        params: {\n          Token: \"jg9ngajqfe6vfu3d\",\n          EAN: isbn,\n          SAN: \"\",\n          thumbnail: false\n        }\n      }).then((coverInfo) => {\n\n          this.setState({\n            cover: coverInfo.request.responseURL\n          })\n      })\n    }\n\n    getBookDetailsAPI = (isbn) => {\n        this.setState({\n          showBookLoadingScreen: true,\n        });\n        return axios({\n            method: \"GET\",\n            url: this.state.jsonAPI,\n            responseType: \"json\",\n            params: {\n                Get: \"Onix\",\n                Token: \"jg9ngajqfe6vfu3d\",\n                EAN: isbn,\n            }\n        }).then((bookInfo) =>{\n\n            let currentTitle, currentContributor, currentPublisher, currentCover, currentDescription, currentPages;\n\n            let bookData = bookInfo.request.response.Product;\n\n            //Grabbing all needed data and storing in variables\n\n            if (bookData.Title.TitleText === undefined) {\n              currentTitle = bookData.Title[0].TitleText;\n            } else {\n              currentTitle = bookData.Title.TitleText;\n            }\n          \n            currentContributor = bookData.Contributor.PersonName;\n            currentPublisher = bookData.Publisher.PublisherName;\n\n            //if link for cover is not in book metadata, then use the Biblioshare Image API to get an image\n            if (bookData.MediaFile === undefined) {\n              this.getBookCoverAPI(isbn)\n            } else {\n              currentCover = bookData.MediaFile.MediaFileLink;\n            }\n            \n            currentDescription = bookData.OtherText[0].Text;\n            currentPages = bookData.NumberOfPages\n            \n            //Replacing escaped HTML to unescaped using REGEX\n            let cleanTitle = currentTitle.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&amp;/g, \"&\");\n            let cleanDescription = \n            currentDescription.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&amp;/g, \"&\");\n            let cleanPublisher = currentPublisher.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&amp;/g, \"&\");\n            \n            //Parsing the cleaned HTML so that it is not a string\n            let parser = new DOMParser();\n            let parseDescription = parser.parseFromString(cleanDescription, \"text/html\");\n            let parsePublisher = parser.parseFromString(cleanPublisher,\"text/html\");\n            let parseTitle = parser.parseFromString(cleanTitle,\"text/html\");\n\n            //Updating new information to a new variable\n            let newDescription = parseDescription.documentElement.innerHTML;\n            let newPublisher = parsePublisher.documentElement.innerText;\n            let newTitle = parseTitle.documentElement.innerText;\n            \n            //Setting state to clean data from API\n            this.setState({\n                title: newTitle,\n                contributor: currentContributor,\n                publisher: newPublisher,\n                cover: currentCover,\n                description: newDescription,\n                pages: currentPages,\n                showBookLoadingScreen: false,\n                showBookInfo: true,\n            });\n        })\n    }\n    \n    componentDidMount(){\n\n        //Grabbing the current ISBN through a props passed through the App.js file\n        let currentIsbn = '';\n\n        currentIsbn = this.props.data.match.params.isbn;\n\n        //Once ISBN is grabbed, call the Biblioshare JSON API with ISBN as a key\n        this.setState({\n            isbn: currentIsbn\n        }, () => this.getBookDetailsAPI(this.state.isbn))\n\n        setTimeout(() => {\n          this.getBookCoverAPI(this.state.isbn)\n        }, 200)\n    }\n    \n    render(){\n        \n        return (\n          <div className=\"bookPage\">\n            <header>\n              <Nav />\n            </header>\n\n            <div className=\"bookSection\">\n\n              {this.state.showBookLoadingScreen ? <LoadingScreen /> : null}\n\n              {this.state.showBookInfo ? (\n\n                <React.Fragment>\n\n                  <div className=\"productInfo\">\n                    <div className=\"text\">\n                      <h1>{this.state.title}</h1>\n                      <h2>{this.state.contributor}</h2>\n                      <p>{this.state.publisher}</p>\n                      <p>{this.state.pages} pages</p>\n                      <p>{this.state.isbn}</p>\n                    </div>\n                    <div className=\"image\">\n                      <img src={this.state.cover} alt={this.state.title + \" by \" + this.state.author} />\n                    </div>\n                  </div>\n\n                  <div className=\"productExtraInfo\">\n                    <h3>Description</h3>\n\n                    {/* This is because the text from the API included it's own HTML */}\n                    <p\n                      className=\"description\"\n                      dangerouslySetInnerHTML={{ __html: this.state.description }}\n                      ></p>\n                  </div>\n                  \n                </React.Fragment>\n\n\n              ) : null}\n\n\n            </div>\n\n            <Footer />\n          </div>\n        );\n    }\n}\n\nexport default BookPage;","import React from 'react';\nimport Nav from './Nav';\n\nconst NotFound = () => (\n    <React.Fragment>\n        <header>\n            <Nav />\n        </header>\n        <div className=\"notFound\">\n            <h1>The page you were looking for was not found.</h1>\n            <h2>Please return to the homepage!</h2>\n        </div>\n    </React.Fragment>\n);\n\nexport default NotFound;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport bookInfo from '../bookInfo';\nimport MainPage from './MainPage';\nimport About from './About';\nimport Blog from './Blog';\nimport BookPage from './BookPage';\nimport NotFound from './NotFound';\n\nimport '../styles/App.scss';\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(fab, faArrowUp);\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      allBooks: bookInfo,\n      isbn: '',\n      allIsbns: [],\n      allTitles: [],\n      allAuthors: [],\n      imageURLs: [],\n      imageAPI:\n        \"https://www.biblioshare.org/BNCServices/BNCServices.asmx/Images?\",\n      showLoadingScreen: false,\n      showNoBookScreen: false,\n    };\n  }\n\n  //This function makes a call to the API for each ISBN that is passed through it\n\n  getBookAPI = (isbn) => { //pass through each ISBN as a parameter\n\n    this.setState({\n      showLoadingScreen: true,\n      showNoBookScreen: false,\n    });\n\n    return axios({\n      method: \"GET\",\n      url: this.state.imageAPI,\n      responseType: \"json\",\n      params: {\n        Token: \"jg9ngajqfe6vfu3d\",\n        EAN: isbn,\n        SAN: \"\",\n        thumbnail: false\n      }\n    })\n  }\n\n\n  //This function gathers all of the isbns, titles, and author names and updates state\n\n  getAllBooks = () => {\n\n    //I am grabbing all of the ISBNs from the bookInfo object through a for loop for all the categories, then the options within. Ex - loop through each race, then each isbn is pushed through an array in this.state.\n\n    let isbn, title, author;\n    let newISBNs = [];\n    let newTitles = [];\n    let newAuthors = [];\n    let noDupISBNs = [];\n    let noDupTitles = [];\n    let noDupAuthors = [];\n\n    const raceCategories = Object.keys(bookInfo.race); //creates an array of each of the categories in race\n    const genderCategories = Object.keys(bookInfo.gender); //creates an array of each of the categories in race\n\n    //looping through each race option\n    for (let i = 0; i < raceCategories.length; i++) {\n      const info = bookInfo.race[raceCategories[i]];//grabs all of the book info\n\n      //looping through each book in each race option \n      for (let i = 0; i < info.length; i++) {\n\n        //grabs all of the needed info from each category and option\n        isbn = info[i].isbn;\n        title = info[i].title;\n        author = info[i].author;\n\n        //pushes each attribute to its relevant array\n        newISBNs.push(isbn);\n        newTitles.push(title);\n        newAuthors.push(author);\n      }\n    }\n\n    //looping through each race option\n    for (let i = 0; i < genderCategories.length; i++) {\n      const info = bookInfo.gender[genderCategories[i]];//grabs all of the book info\n\n      //looping through each book in each race option \n      for (let i = 0; i < info.length; i++) {\n\n        //grabs all of the needed info from each category and option\n        isbn = info[i].isbn;\n        title = info[i].title;\n        author = info[i].author;\n\n        //pushes each attribute to its relevant array\n        newISBNs.push(isbn);\n        newTitles.push(title);\n        newAuthors.push(author);\n\n        noDupISBNs = [...new Set(newISBNs.map(title => title))];\n        noDupTitles = [...new Set(newTitles.map(title => title))];\n        noDupAuthors = [...new Set(newAuthors.map(title => title))];\n \n      }\n    }\n    //sets state with updated all book info\n    this.setState(()=> {\n      return {\n        allIsbns: noDupISBNs,\n        allTitles: noDupTitles,\n        allAuthors: noDupAuthors,\n      }\n    })\n  }\n\n  showAllBooks = () => {\n    //This will make api call to Biblioshare Image API and update all info in state\n    setTimeout(() => {\n\n      let apiPromises = [];\n      let newImageURLs = [];\n\n      this.state.allIsbns.map((isbn) => {\n        return apiPromises.push(this.getBookAPI(isbn));\n      })\n\n      axios.all(apiPromises)\n        .then((...apiCovers) => {\n\n          //grab each object out of the API promises\n          let returnedCovers = apiCovers.map((apiObject) => {\n            return apiCovers[0]\n          })\n\n          //loop over each object to grab the image URL\n          for (let i = 0; i < returnedCovers[0].length; i++) {\n            //pushes each urls to an array\n            newImageURLs.push(returnedCovers[0][i].request.responseURL);\n            //changes state to the updated image urls\n            this.setState({\n              imageURLs: newImageURLs,\n              showLoadingScreen: false,\n            })\n          }\n        });\n    }, 250)\n  }\n  //This function replaces all of the books with the user selection and updates state. \n\n  getFilteredBooks = (e, categoryChoice1, categoryChoice2, selectChoice1, selectChoice2) => {\n\n    //The user input is taken from an event listener on the filter component, passed through the function parameter. The value of the user select is equal to the key name in the bookInfo object, so a for loop will grab the ISBNs, titles, and authors with that key name and push to a new array. That array will equal the new state. \n\n    let selectedISBNs = [];\n    let newPromises = [];\n    let selectedImageURLs = [];\n    let selectedTitles = [];\n    let selectedAuthors = [];\n\n    if ((categoryChoice1 === \"noSelect\" || categoryChoice1 === \"\") && (categoryChoice2 === \"noSelect\" || categoryChoice2 === \"\")) {\n      //if they select the default, get all of the book ISBNs, titles, authors and set to state\n      this.getAllBooks();\n      this.showAllBooks();\n\n    } else if ((categoryChoice1 === \"noSelect\" || categoryChoice1 === \"\") && categoryChoice2 !== 'noSelect'){\n\n      //Grabs ISBNs for gender category and pushes it into an array\n      for (let i = 0; i < bookInfo[selectChoice2][categoryChoice2].length; i++) {\n        selectedISBNs.push(bookInfo[selectChoice2][categoryChoice2][i].isbn);\n        selectedTitles.push(bookInfo[selectChoice2][categoryChoice2][i].title);\n        selectedAuthors.push(bookInfo[selectChoice2][categoryChoice2][i].author);\n      }\n\n      //Sets state to the updated group of ISBNs\n      this.setState(() => {\n        return {\n          allIsbns: selectedISBNs,\n          allTitles: selectedTitles,\n          allAuthors: selectedAuthors,\n        }\n      })\n\n      //Once all the info for each isbn comes back from the API, update state with all ISBNS so they can be put on the page\n      setTimeout(() => {\n        this.state.allIsbns.map((isbn) => {\n          return newPromises.push(this.getBookAPI(isbn));\n        })\n\n        axios.all(newPromises)\n          .then((...sortedCovers) => {\n            sortedCovers.map((apiObject) => {\n              return sortedCovers[0];\n            })\n            for (let i = 0; i < sortedCovers[0].length; i++) {\n              selectedImageURLs.push(sortedCovers[0][i].request.responseURL);\n            }\n            //changes state to the updated image urls\n            this.setState({\n              imageURLs: selectedImageURLs,\n              showLoadingScreen: false,\n            })\n          })\n      }, 100)\n\n    } else if (categoryChoice1 !== \"noSelect\" && (categoryChoice2 === \"noSelect\" || categoryChoice2 === \"\")){\n\n      //Grabs ISBNs for race category and pushes it into an array\n      for (let i = 0; i < bookInfo[selectChoice1][categoryChoice1].length; i++) {\n        selectedISBNs.push(bookInfo[selectChoice1][categoryChoice1][i].isbn);\n        selectedTitles.push(bookInfo[selectChoice1][categoryChoice1][i].title);\n        selectedAuthors.push(bookInfo[selectChoice1][categoryChoice1][i].author);\n      }\n\n      //Sets state to the updated group of ISBNs\n      this.setState(() => {\n        return {\n          allIsbns: selectedISBNs,\n          allTitles: selectedTitles,\n          allAuthors: selectedAuthors,\n        }\n      })\n\n      //Once all the info for each isbn comes back from the API, update state with all ISBNS so they can be put on the page\n      setTimeout(() => {\n        this.state.allIsbns.map((isbn) => {\n          return newPromises.push(this.getBookAPI(isbn));\n        })\n\n        axios.all(newPromises)\n          .then((...sortedCovers) => {\n            sortedCovers.map((apiObject) => {\n              return sortedCovers[0];\n            })\n            for (let i = 0; i < sortedCovers[0].length; i++) {\n              selectedImageURLs.push(sortedCovers[0][i].request.responseURL);\n            }\n            //changes state to the updated image urls\n            this.setState({\n              imageURLs: selectedImageURLs,\n              showLoadingScreen: false,\n            })\n          })\n      }, 100)\n\n    } else if ((categoryChoice1 !== \"noSelect\" || categoryChoice1 !== \"\") && (categoryChoice2 !== \"noSelect\" || categoryChoice2 !== \"\")) {\n\n      //if both are selected\n        \n      for (let i = 0; i < bookInfo[selectChoice1][categoryChoice1].length; i++) {\n\n        //Check if there is another category assigned to each book\n        const otherCategory = bookInfo[selectChoice1][categoryChoice1][i].otherCategories;\n        \n        //If otherCategories exists\n        if (otherCategory !== undefined) {\n\n          //Loop through each other category\n          for (let j = 0; j < otherCategory.length; j++) {\n\n            //And see if it matches with the other selected category\n            if (categoryChoice2 === otherCategory[j]) {\n              selectedISBNs.push(bookInfo[selectChoice1][categoryChoice1][i].isbn);\n              selectedTitles.push(bookInfo[selectChoice1][categoryChoice1][i].title);\n              selectedAuthors.push(bookInfo[selectChoice1][categoryChoice1][i].author);\n            }\n          }\n        }\n      }\n\n      console.log(selectedISBNs);\n\n      if (selectedISBNs.length === 0) {\n        this.setState(()=> {\n          return {\n            showNoBookScreen: true,\n          }\n        })\n      }\n\n      //Sets state to the updated group of ISBNs\n      this.setState(() => {\n        return {\n          allIsbns: selectedISBNs,\n          allTitles: selectedTitles,\n          allAuthors: selectedAuthors,\n        }\n      })\n\n      //Once all the info for each isbn comes back from the API, update state with all ISBNS so they can be put on the page\n      setTimeout(() => {\n        this.state.allIsbns.map((isbn) => {\n          return newPromises.push(this.getBookAPI(isbn));\n        })\n\n        axios.all(newPromises)\n          .then((...sortedCovers) => {\n            sortedCovers.map((apiObject) => {\n              return sortedCovers[0];\n            })\n            for (let i = 0; i < sortedCovers[0].length; i++) {\n              selectedImageURLs.push(sortedCovers[0][i].request.responseURL);\n            }\n            //changes state to the updated image urls\n            this.setState({\n              imageURLs: selectedImageURLs,\n              showLoadingScreen: false,\n            })\n          })\n      }, 100)\n    }\n  }\n\n  componentDidMount() {\n\n    //I'm grabbing all of the isbns and putting them into an axios call to grab the images. This will return a promise for each axios call. To ensure that they all appear at the same time, I am using the .all function. I isolate the image URLs and push it to a new array, then change the imageURLs state. \n    this.getAllBooks();\n\n    //make api call to Biblioshare Image API and update all info in state\n    this.showAllBooks();\n  }\n\n  render() {\n\n    return (\n      <Router basename=\"/DiverseLit\">\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              return (\n                <MainPage\n                  bookISBNs={this.state.allIsbns}\n                  bookImg={this.state.imageURLs}\n                  bookTitles={this.state.allTitles}\n                  bookAuthors={this.state.allAuthors}\n                  showLoadingScreenProps={this.state.showLoadingScreen}\n                  showNoBookScreenProps={this.state.showNoBookScreen}\n                  getFilteredBooksProps={this.getFilteredBooks}\n                />\n              );\n            }}\n          />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/blog\" component={Blog} />\n          <Route\n            path=\"/book/:isbn\"\n            render={data => {\n              return <BookPage \n                        data={data}\n                        getAllBooks={this.getAllBooks}\n                        showAllBooksProps={this.showAllBooks}\n                      />;\n            }}\n          />\n          <Route path='*' component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}