{"version":3,"sources":["bookInfo.js","Hero.js","categories.js","Filter.js","Header.js","AllBooks.js","App.js","serviceWorker.js","index.js"],"names":["bookInfo","race","black","isbn","title","author","indigenous","asian","latinx","Hero","className","Component","categories","optionName","value","Filter","HandleFilterSelection","e","selection","target","setState","category1","console","log","state","onChange","this","name","map","raceOfAuthor","i","key","onClick","props","getFilteredBooksProps","type","Header","href","AllBooks","bookImg","image","bookTitles","bookAuthors","src","alt","App","getBookAPI","axios","method","url","imageAPI","responseType","params","Token","EAN","SAN","thumbnail","getAllBooks","newISBNs","newTitles","newAuthors","raceCategories","Object","keys","length","info","push","prevState","allIsbns","allTitles","allAuthors","getFilteredBooks","categoryChoice","selectedISBNs","newPromises","selectedImageURLs","selectedTitles","selectedAuthors","setTimeout","all","then","sortedCovers","apiObject","request","responseURL","imageURLs","allBooks","apiPromises","newImageURLs","apiCovers","returnedCovers","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.04a53ae1.chunk.js","sourcesContent":["\n//Object that contains all book titles and ISBNs\nconst bookInfo = {\n    race :{\n        black:[\n            {\n                isbn: 9780385686150,\n                title: 'Homegoing',\n                author: 'Yaa Gyasi',\n            },\n            {\n                isbn: 9780399587689,\n                title: 'The Proposal',\n                author: 'Jasmine Guillory',\n            },\n            {\n                isbn: 9780385690324,\n                title: 'Black Leopard Red Wolf',\n                author: 'Marlon James',\n            },\n            {\n                isbn: 9781501168000,\n                title: 'Heads of The Colored People',\n                author: 'Nafissa Thompson-Spires',\n            },\n            {\n                isbn: 9781443459587,\n                title: 'Washington Black',\n                author: 'Esi Edugyan',\n            },\n        ],\n        indigenous: [\n            {\n                isbn: 9781551527253,\n                title: 'Jonny Appleseed',\n                author: 'Joshua Whitehead',\n            },\n            {\n                isbn: 9780385691147,\n                title: 'Heart Berries',\n                author: 'Terese Marie Mailhot',\n            },\n            {\n                isbn: 9781487003463,\n                title: 'river woman',\n                author: 'Katherena Vermette',\n            },\n            {\n                isbn: 9780385692380,\n                title: 'A Mind Spread Out On The Ground',\n                author: 'Alicia Elliott',\n            },\n            {\n                isbn: 9781770414006,\n                title: 'Moon of the Crusted Snow',\n                author: 'Waubgeshig Rice',\n            },\n            \n        ],\n        asian:[\n            {\n                isbn: 9780804172707,\n                title: 'A Little Life',\n                author: 'Hanya Yanagihara',\n            },\n            {\n                isbn: 9781328764522,\n                title: 'How to Write an Autobiographical Novel',\n                author: 'Alexander Chee',\n            },\n            {\n                isbn: 9780062428738,\n                title: 'Sick',\n                author: 'Porochista Khakpour',\n            },\n            {\n                isbn: 9780385693219,\n                title: 'The Farm',\n                author: 'Joanne Ramos',\n            },\n            {\n                isbn: 9781250222022,\n                title: 'Trust Exercise',\n                author: 'Susan Choi',\n            },\n        ],\n        latinx: [\n\n            {\n                isbn: 9780525434313,\n                title: 'Fruit of the Drunken Tree',\n                author: 'Ingrid Rojas Contreras',\n            },\n            {\n                isbn: 9780735217737,\n                title: 'The Line Becomes a River',\n                author: 'Francisco Cant√∫',\n            },\n            {\n                isbn: 9780525511298,\n                title: 'Sabrina & Corina',\n                author: 'Kali Fajardo-Anstine',\n            },\n            {\n                isbn: 9780062662835,\n                title: 'With the Fire On High',\n                author: 'Elizabeth Acevedo',\n            },\n            {\n                isbn: 9781944700874,\n                title: 'The Cuban Comedy',\n                author: 'Pablo Medina',\n            },\n\n        ],\n    }\n}\n\nexport default bookInfo;","import React, { Component } from 'react';\n\nclass Hero extends Component {\n    render(){\n\n        return(\n            <div className='hero'>\n                <div className=\"text\">\n                    \n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Hero;","\nconst categories = {\n    race: [\n        {\n            optionName:'Filter by ethnicity',\n            value: ''\n        },\n        {\n            optionName:'Asian authors',\n            value: 'asian',\n        },\n        {\n            optionName:'Black authors',\n            value: 'black',\n        },\n        {\n            optionName:'Indigenous authors',\n            value: 'indigenous',\n        },\n        {\n            optionName:'Latinx authors',\n            value: 'latinx',\n        }\n    ]\n}\n\nexport default categories;","import React,  { Component } from 'react';\nimport categories from './categories';\nimport bookInfo from './bookInfo';\n\nclass Filter extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            category1: \"\", \n        }\n    }\n\n    HandleFilterSelection = (e) =>{\n        const selection = e.target.value;\n        this.setState({\n            category1: e.target.value\n        })\n        console.log(bookInfo.race[selection]);\n    }\n\n    render(){\n        return(\n            <div className=\"filter\">\n                <select onChange={this.HandleFilterSelection}  name=\"raceCategories\">\n                    {categories.race.map((raceOfAuthor, i) => {\n                        return(\n                                <option key = {i} value={raceOfAuthor.value}>{raceOfAuthor.optionName}</option>\n                            )\n                        })}\n                </select>\n                <button onClick={(e) =>\n                    this.props.getFilteredBooksProps(e, this.state.category1)\n                }type =\"submit\">Filter</button>\n            </div>\n        )\n    }\n\n}\n\nexport default Filter;","import React, { Component } from 'react';\nimport Hero from './Hero';\nimport Filter from './Filter';\n\nclass Header extends Component {\n\n    render(){\n        return(\n            <header>\n                <nav className=\"fixedHeader\">\n                    <div className=\"wrapper\"> \n                        <h1 className=\"title\">Diverse Lit<span>.</span></h1>\n\n                        <ul>\n                            <li>\n                                <span className=\"hover\"> <a href=\"#\">About</a></span>\n                            </li>\n                            <li>\n                                <span className=\"hover\"> <a href=\"#\">Blog</a></span>\n                            </li>\n                            <li>\n                                <span className=\"hover\"> <a href=\"#\">Browse</a></span>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n                <Hero />\n                <div className=\"categories\">\n                    <Filter \n                        getFilteredBooksProps={this.props.getFilteredBooksProps}\n                    />\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass AllBooks extends Component {\n\n    render(){\n        return(\n            <div className='books'>\n                <ul>\n                    {this.props.bookImg.map((image, i) => {\n                        const title = this.props.bookTitles[i];\n                        const author = this.props.bookAuthors[i]\n                        return (\n                            <li key={i}>\n                                <img src={image} alt= {title + \" by \" + author}className=\"bookCover\" />\n                                <div className=\"bookText\">\n                                    <h2>{title}</h2>\n                                    <h3>{author}</h3>\n                                </div>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default AllBooks;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport bookInfo from './bookInfo';\nimport Header from './Header';\nimport AllBooks from './AllBooks';\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      allBooks: bookInfo,\n      isbn: '',\n      allIsbns: [],\n      allTitles: [],\n      allAuthors: [],\n      imageURLs: [],\n      imageAPI:\n        \"https://www.biblioshare.org/BNCServices/BNCServices.asmx/Images?\",\n    };\n  }\n\n  //This function makes a call to the API for each ISBN that is passed through it\n\n  getBookAPI = (isbn) => { //pass through each ISBN as a parameter\n    return axios({\n      method: \"GET\",\n      url: this.state.imageAPI,\n      responseType: \"json\",\n      params: {\n        Token: \"jg9ngajqfe6vfu3d\",\n        EAN: isbn,\n        SAN: \"\",\n        thumbnail: false\n      }\n    })\n  }\n\n  //This function gathers all of the isbns, titles, and author names and places it in \n\n  getAllBooks = () => {\n\n    //I am grabbing all of the ISBNs from the bookInfo object through a for loop for all the categories, then the options within. Ex - loop through each race, then each isbn is pushed through an array in this.state.\n\n    let isbn, title, author;\n    let newISBNs = [];\n    let newTitles = [];\n    let newAuthors = [];\n\n    const raceCategories = Object.keys(bookInfo.race); //creates an array of each of the categories in race\n\n    //looping through each race option\n    for (let i = 0; i < raceCategories.length; i++) {\n      const info = bookInfo.race[raceCategories[i]];//grabs all of the book info\n\n      //looping through each book in each race option \n      for (let i = 0; i < info.length; i++) {\n\n        //grabs all of the needed info from each category and option\n        isbn = info[i].isbn;\n        title = info[i].title;\n        author = info[i].author;\n\n        //pushes each attribute to its relevant array\n        newISBNs.push(isbn);\n        newTitles.push(title);\n        newAuthors.push(author);\n      }\n    }\n\n    //sets state with updated all book info\n    this.setState((prevState)=> {\n      return {\n        allIsbns: newISBNs,\n        allTitles: newTitles,\n        allAuthors: newAuthors,\n      }\n    }, () =>{\n      console.log(this.state.allIsbns);\n    })\n\n    //ISSUE - State is updated in component, but will not update in code. When console.log this.state.allIsbns, I get an empty array. In the meantime, I've used setTimeout\n  }\n\n  getFilteredBooks = (e, categoryChoice) => {\n\n    let selectedISBNs = [];\n    let newPromises = [];\n    let selectedImageURLs = [];\n    let selectedTitles = [];\n    let selectedAuthors = [];\n\n    for(let i = 0; i < bookInfo.race[categoryChoice].length; i++){\n      selectedISBNs.push(bookInfo.race[categoryChoice][i].isbn);\n      selectedTitles.push(bookInfo.race[categoryChoice][i].title);\n      selectedAuthors.push(bookInfo.race[categoryChoice][i].author);\n    }\n\n    this.setState((prevState)=>{\n      return {\n        allIsbns: selectedISBNs,\n        allTitles: selectedTitles,\n        allAuthors: selectedAuthors,\n      }\n    })\n\n    setTimeout (() =>{      \n      this.state.allIsbns.map((isbn) => {\n        return newPromises.push(this.getBookAPI(isbn));\n      })\n\n      axios.all(newPromises)\n        .then((...sortedCovers) => {\n          let returnedCovers = sortedCovers.map((apiObject) =>{\n            return sortedCovers[0];\n          })\n          for(let i = 0; i < sortedCovers[0].length; i++){\n            selectedImageURLs.push(sortedCovers[0][i].request.responseURL); \n          }\n           //changes state to the updated image urls\n          this.setState({\n            imageURLs: selectedImageURLs,\n          })\n        })\n    },300)\n  }\n\n  componentDidMount() {\n\n    this.getAllBooks();\n\n    //I'm grabbing all of the isbns and putting them into an axios call to grab the images. This will return a promise for each axios call. To ensure that they all appear at the same time, I am using the .all function. I isolate the image URLs and push it to a new array, then change the imageURLs state. \n\n    //make api call to Biblioshare Image API\n    setTimeout(() => {\n\n      let apiPromises = [];\n      let newImageURLs = [];\n  \n      this.state.allIsbns.map((isbn)=>{\n        return apiPromises.push(this.getBookAPI(isbn));\n      })\n\n      axios.all(apiPromises)\n      .then((...apiCovers)=> {\n  \n        //grab each object out of the API promises\n        let returnedCovers = apiCovers.map((apiObject) => {\n          return apiCovers[0]\n        })\n  \n        //loop over each object to grab the image URL\n        for(let i = 0; i < returnedCovers[0].length; i++){\n          //pushes each urls to an array\n          newImageURLs.push(returnedCovers[0][i].request.responseURL);\n          //changes state to the updated image urls\n          this.setState({\n            imageURLs: newImageURLs,\n          })\n        }\n      });\n    }, 250)\n    \n\n  }\n\n  render() {\n\n    //Pass as props to the AllBooks component\n    return (\n      <div>\n\n          <Header \n            getFilteredBooksProps = {this.getFilteredBooks}\n          />\n\n        <main className='books'>\n\n          <div className=\"wrapper\">\n\n            <AllBooks\n              bookImg={this.state.imageURLs}\n              bookTitles = {this.state.allTitles}\n              bookAuthors = {this.state.allAuthors}\n            />\n\n          </div>\n\n        </main>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}